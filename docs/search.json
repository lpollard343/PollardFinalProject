[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "quarto5",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Acidobacteriota and WREF",
    "section": "",
    "text": "Utilizing the coding knowledge and skills learned in Biology 476: Evolutionary Genomics and Bioinformatics, students built a github repository and Quatro website. The website includes graphs and tables created by the students that showcase data from NEON metagenomes. The results are visual representations of data from the WREF collection site in Vancouver, WA as well as data on the bacteria phylum Acidobacteriota. These visuals help to tell of the story of WREF and actinobacteriota and lay the foundation for understanding how they fit into their greater environments."
  },
  {
    "objectID": "about.html#wref-site",
    "href": "about.html#wref-site",
    "title": "Actinobacteriota and WREF",
    "section": "WREF Site",
    "text": "WREF Site"
  },
  {
    "objectID": "about.html#actinobacteriota",
    "href": "about.html#actinobacteriota",
    "title": "Actinobacteriota and WREF",
    "section": "Actinobacteriota",
    "text": "Actinobacteriota"
  },
  {
    "objectID": "about.html#acidobacteriota",
    "href": "about.html#acidobacteriota",
    "title": "Actinobacteriota and WREF",
    "section": "Acidobacteriota",
    "text": "Acidobacteriota"
  },
  {
    "objectID": "about.html#data-collection-site-wref",
    "href": "about.html#data-collection-site-wref",
    "title": "Acidobacteriota and WREF",
    "section": "Data Collection Site: WREF",
    "text": "Data Collection Site: WREF\nThe Wind River Experimental Forest is a field site about 40 miles NE of Vancouver, WA in the Gifford Pinchot National Forest (“Wind River Experimental Forest NEON / WREF” (n.d.)). This is in Neon’s Pacific Northwest Domain (D16). The area is populated by douglas firs and western hemlocks of diverse ages. The region’s climate is temperate with an average temperature of 9.2°C and average precipitation of 87.6 in. In the valley of volcanoes, Mt. Rainier and Mt. St. Helens, the soil here is comprised of volcanic ashe, pumice, basalt bedrock, and andesite (leftover from lava flows). Among the animals living in this area are elk, bobcats, cougars, black bears, various birds, and many small mammals. After being used as a seedling nursery for post-wildfire forest rehabilitation for almost a century, the NEON site was established in 2006 and sampling for the project began in 2018.\n\n\n\nA beautiful view of a lake in the WREF site\n\n\n\n\n\nMap of the WREF site"
  },
  {
    "objectID": "about.html#bacterial-phylum-acidobacteriota",
    "href": "about.html#bacterial-phylum-acidobacteriota",
    "title": "Acidobacteriota and WREF",
    "section": "Bacterial Phylum: Acidobacteriota",
    "text": "Bacterial Phylum: Acidobacteriota\nThis phylum of bacteria is gram-negative and are most prevalent in soils (though they are present in a myriad of different mediums) (“Acidobacteriota” (n.d.)). The name “acidobacteriota” comes from their acidophilic– or acid loving– nature. Many species thrive in acidic environments. The majority of them are also aerobic while a minority in anaerobic. The first species of this phylum was characterized in the early 90’s (Acidobacterium capsulatum), however, the phylum itself was not identified until the 2010’s (Huber et al. (2022). Within this phylum 22 genera and 40 species have been identified.\n\n\n\nAcidobacterium cf. capsulatum"
  },
  {
    "objectID": "libraries.html",
    "href": "libraries.html",
    "title": "Libraries",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(knitr)\nlibrary(DT)\nlibrary(plotly)\n\n\nAttaching package: 'plotly'\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\nThe following object is masked from 'package:stats':\n\n    filter\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\n\n\nNEON_MAGs &lt;- read_csv(\"data/GOLD_Study_ID_Gs0161344_NEON.csv\")\n\nRows: 1754 Columns: 19\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (8): Bin ID, Genome Name, Bin Quality, Bin Lineage, GTDB-Tk Taxonomy L...\ndbl  (10): IMG Genome ID, Bin Completeness, Bin Contamination, Total Number ...\ndate  (1): Date Added\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nNEON_MAGs_Ind &lt;- NEON_MAGs %&gt;% \n  filter(`Genome Name` != \"NEON combined assembly\")\n\n\nNEON_MAGs &lt;- read_csv(\"data/GOLD_Study_ID_Gs0161344_NEON.csv\") %&gt;% \n  select(-c(`GOLD Study ID`, `Bin Methods`, `Created By`, `Date Added`)) %&gt;% \n  mutate(\"Assembly Type\" = case_when(`Genome Name` == \"NEON combined assembly\" ~ `Genome Name`,\n                            TRUE ~ \"Individual\")) %&gt;% \n  mutate_at(\"Assembly Type\", str_replace, \"NEON combined assembly\", \"Combined\") %&gt;% \n  separate(`GTDB-Tk Taxonomy Lineage`, c(\"Domain\", \"Phylum\", \"Class\", \"Order\", \"Family\", \"Genus\"), \"; \", remove = FALSE) %&gt;% \n  mutate_at(\"Genome Name\", str_replace, \"Terrestrial soil microbial communities from \", \"\") %&gt;% \n  separate(`Genome Name`, c(\"Site\",\"Sample Name\"), \" - \") %&gt;% \n  mutate_at(\"Sample Name\", str_replace, \"-comp-1\", \"\") %&gt;%\n  separate(`Sample Name`, c(\"Site ID\",\"subplot.layer.date\"), \"_\", remove = FALSE,) %&gt;% \n  separate(`subplot.layer.date`, c(\"Subplot\", \"Layer\", \"Date\"), \"-\") \n\nRows: 1754 Columns: 19\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (8): Bin ID, Genome Name, Bin Quality, Bin Lineage, GTDB-Tk Taxonomy L...\ndbl  (10): IMG Genome ID, Bin Completeness, Bin Contamination, Total Number ...\ndate  (1): Date Added\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nWarning: Expected 6 pieces. Additional pieces discarded in 29 rows [54, 232, 267, 328,\n389, 400, 439, 473, 529, 531, 538, 669, 936, 1016, 1118, 1240, 1323, 1330,\n1477, 1484, ...].\n\n\nWarning: Expected 6 pieces. Missing pieces filled with `NA` in 429 rows [46, 50, 53, 55,\n56, 57, 61, 62, 65, 66, 67, 71, 76, 78, 79, 81, 89, 92, 96, 99, ...].\n\n\nWarning: Expected 2 pieces. Missing pieces filled with `NA` in 624 rows [4, 7, 8, 236,\n237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252,\n...].\n\n\n\nNEON_MAGs_bact_ind &lt;- NEON_MAGs %&gt;% \n  filter(Domain == \"Bacteria\") %&gt;% \n  filter(`Assembly Type` == \"Individual\")"
  },
  {
    "objectID": "code.html",
    "href": "code.html",
    "title": "Code",
    "section": "",
    "text": "install.packages(\"rlang\")\n\nInstalling package into '/cloud/lib/x86_64-pc-linux-gnu-library/4.3'\n(as 'lib' is unspecified)\n\n\n\n# Bioconductor version\nif (!require(\"BiocManager\", quietly = TRUE))\n    install.packages(\"BiocManager\")\n\nBioconductor version '3.18' is out-of-date; the current release version '3.19'\n  is available with R version '4.4'; see https://bioconductor.org/install\n\nBiocManager::install(\"treeio\")\n\n'getOption(\"repos\")' replaces Bioconductor standard repositories, see\n'help(\"repositories\", package = \"BiocManager\")' for details.\nReplacement repositories:\n    CRAN: http://rspm/default/__linux__/focal/latest\n\n\nBioconductor version 3.18 (BiocManager 1.30.23), R 4.3.3 (2024-02-29)\n\n\nWarning: package(s) not installed when version(s) same as or greater than current; use\n  `force = TRUE` to re-install: 'treeio'\n\n\nInstallation paths not writeable, unable to update packages\n  path: /opt/R/4.3.3/lib/R/library\n  packages:\n    boot, codetools, lattice, survival\n\nBiocManager::install(\"ggtree\")\n\n'getOption(\"repos\")' replaces Bioconductor standard repositories, see\n'help(\"repositories\", package = \"BiocManager\")' for details.\nReplacement repositories:\n    CRAN: http://rspm/default/__linux__/focal/latest\nBioconductor version 3.18 (BiocManager 1.30.23), R 4.3.3 (2024-02-29)\n\n\nWarning: package(s) not installed when version(s) same as or greater than current; use\n  `force = TRUE` to re-install: 'ggtree'\n\n\nInstallation paths not writeable, unable to update packages\n  path: /opt/R/4.3.3/lib/R/library\n  packages:\n    boot, codetools, lattice, survival\n\nBiocManager::install(\"ggimage\")\n\n'getOption(\"repos\")' replaces Bioconductor standard repositories, see\n'help(\"repositories\", package = \"BiocManager\")' for details.\nReplacement repositories:\n    CRAN: http://rspm/default/__linux__/focal/latest\nBioconductor version 3.18 (BiocManager 1.30.23), R 4.3.3 (2024-02-29)\n\n\nWarning: package(s) not installed when version(s) same as or greater than current; use\n  `force = TRUE` to re-install: 'ggimage'\n\n\nInstallation paths not writeable, unable to update packages\n  path: /opt/R/4.3.3/lib/R/library\n  packages:\n    boot, codetools, lattice, survival\n\nBiocManager::install(\"ggtreeExtra\")\n\n'getOption(\"repos\")' replaces Bioconductor standard repositories, see\n'help(\"repositories\", package = \"BiocManager\")' for details.\nReplacement repositories:\n    CRAN: http://rspm/default/__linux__/focal/latest\nBioconductor version 3.18 (BiocManager 1.30.23), R 4.3.3 (2024-02-29)\n\n\nWarning: package(s) not installed when version(s) same as or greater than current; use\n  `force = TRUE` to re-install: 'ggtreeExtra'\n\n\nInstallation paths not writeable, unable to update packages\n  path: /opt/R/4.3.3/lib/R/library\n  packages:\n    boot, codetools, lattice, survival\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(knitr)\nlibrary(DT)\nlibrary(plotly)\n\n\nAttaching package: 'plotly'\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\nThe following object is masked from 'package:stats':\n\n    filter\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(zoo)\n\n\nAttaching package: 'zoo'\n\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n\nlibrary(ggimage)\nlibrary(rphylopic)\n\nYou are using rphylopic v.1.4.0. Please remember to credit PhyloPic contributors (hint: `get_attribution()`) and cite rphylopic in your work (hint: `citation(\"rphylopic\")`).\n\nAttaching package: 'rphylopic'\n\nThe following object is masked from 'package:ggimage':\n\n    geom_phylopic\n\nlibrary(treeio)\n\ntreeio v1.26.0 For help: https://yulab-smu.top/treedata-book/\n\nIf you use the ggtree package suite in published research, please cite\nthe appropriate paper(s):\n\nLG Wang, TTY Lam, S Xu, Z Dai, L Zhou, T Feng, P Guo, CW Dunn, BR\nJones, T Bradley, H Zhu, Y Guan, Y Jiang, G Yu. treeio: an R package\nfor phylogenetic tree input and output with richly annotated and\nassociated data. Molecular Biology and Evolution. 2020, 37(2):599-603.\ndoi: 10.1093/molbev/msz240\n\nShuangbin Xu, Lin Li, Xiao Luo, Meijun Chen, Wenli Tang, Li Zhan, Zehan\nDai, Tommy T. Lam, Yi Guan, Guangchuang Yu. Ggtree: A serialized data\nobject for visualization of a phylogenetic tree and annotation data.\niMeta 2022, 1(4):e56. doi:10.1002/imt2.56\n\nGuangchuang Yu. Using ggtree to visualize data on tree-like structures.\nCurrent Protocols in Bioinformatics. 2020, 69:e96. doi:10.1002/cpbi.96\n\nlibrary(tidytree)\n\nIf you use the ggtree package suite in published research, please cite\nthe appropriate paper(s):\n\nG Yu. Data Integration, Manipulation and Visualization of Phylogenetic\nTrees (1st ed.). Chapman and Hall/CRC. 2022. ISBN: 9781032233574\n\nS Xu, Z Dai, P Guo, X Fu, S Liu, L Zhou, W Tang, T Feng, M Chen, L\nZhan, T Wu, E Hu, Y Jiang, X Bo, G Yu. ggtreeExtra: Compact\nvisualization of richly annotated phylogenetic data. Molecular Biology\nand Evolution. 2021, 38(9):4039-4042. doi: 10.1093/molbev/msab166\n\nAttaching package: 'tidytree'\n\nThe following object is masked from 'package:treeio':\n\n    getNodeNum\n\nThe following object is masked from 'package:stats':\n\n    filter\n\nlibrary(ape)\n\n\nAttaching package: 'ape'\n\nThe following objects are masked from 'package:tidytree':\n\n    drop.tip, keep.tip\n\nThe following object is masked from 'package:treeio':\n\n    drop.tip\n\nThe following object is masked from 'package:dplyr':\n\n    where\n\nlibrary(TreeTools)\n\n\nAttaching package: 'TreeTools'\n\nThe following object is masked from 'package:tidytree':\n\n    MRCA\n\nThe following object is masked from 'package:treeio':\n\n    MRCA\n\nlibrary(phytools)\n\nLoading required package: maps\n\nAttaching package: 'maps'\n\nThe following object is masked from 'package:purrr':\n\n    map\n\n\nAttaching package: 'phytools'\n\nThe following object is masked from 'package:TreeTools':\n\n    as.multiPhylo\n\nThe following object is masked from 'package:treeio':\n\n    read.newick\n\nlibrary(ggtree)\n\nggtree v3.10.1 For help: https://yulab-smu.top/treedata-book/\n\nIf you use the ggtree package suite in published research, please cite\nthe appropriate paper(s):\n\nGuangchuang Yu, David Smith, Huachen Zhu, Yi Guan, Tommy Tsan-Yuk Lam.\nggtree: an R package for visualization and annotation of phylogenetic\ntrees with their covariates and other associated data. Methods in\nEcology and Evolution. 2017, 8(1):28-36. doi:10.1111/2041-210X.12628\n\nGuangchuang Yu.  Data Integration, Manipulation and Visualization of\nPhylogenetic Trees (1st edition). Chapman and Hall/CRC. 2022,\ndoi:10.1201/9781003279242\n\nShuangbin Xu, Lin Li, Xiao Luo, Meijun Chen, Wenli Tang, Li Zhan, Zehan\nDai, Tommy T. Lam, Yi Guan, Guangchuang Yu. Ggtree: A serialized data\nobject for visualization of a phylogenetic tree and annotation data.\niMeta 2022, 1(4):e56. doi:10.1002/imt2.56\n\nAttaching package: 'ggtree'\n\nThe following object is masked from 'package:TreeTools':\n\n    MRCA\n\nThe following object is masked from 'package:ape':\n\n    rotate\n\nThe following object is masked from 'package:tidyr':\n\n    expand\n\nlibrary(TDbook)\nlibrary(ggnewscale)\nlibrary(ggtreeExtra)\n\nggtreeExtra v1.12.0 For help: https://yulab-smu.top/treedata-book/\n\nIf you use the ggtree package suite in published research, please cite\nthe appropriate paper(s):\n\nS Xu, Z Dai, P Guo, X Fu, S Liu, L Zhou, W Tang, T Feng, M Chen, L\nZhan, T Wu, E Hu, Y Jiang, X Bo, G Yu. ggtreeExtra: Compact\nvisualization of richly annotated phylogenetic data. Molecular Biology\nand Evolution. 2021, 38(9):4039-4042. doi: 10.1093/molbev/msab166\n\nlibrary(ggstar)\n\n\nNEON_MAGs &lt;- read_csv(\"data/GOLD_Study_ID_Gs0161344_NEON.csv\")\n\nRows: 1754 Columns: 19\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (8): Bin ID, Genome Name, Bin Quality, Bin Lineage, GTDB-Tk Taxonomy L...\ndbl  (10): IMG Genome ID, Bin Completeness, Bin Contamination, Total Number ...\ndate  (1): Date Added\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nhead(NEON_MAGs)\n\n# A tibble: 6 × 19\n  `Bin ID`        `Genome Name`      `IMG Genome ID` `Bin Quality` `Bin Lineage`\n  &lt;chr&gt;           &lt;chr&gt;                        &lt;dbl&gt; &lt;chr&gt;         &lt;chr&gt;        \n1 3300060887_39   Terrestrial soil …      3300060887 MQ            Archaea      \n2 3300060914_30   Terrestrial soil …      3300060914 MQ            Archaea      \n3 3300060650_39   Terrestrial soil …      3300060650 MQ            Archaea; Eur…\n4 3300067032_2117 NEON combined ass…      3300067032 MQ            Archaea; Eur…\n5 3300060650_21   Terrestrial soil …      3300060650 MQ            Archaea; Eur…\n6 3300060650_24   Terrestrial soil …      3300060650 MQ            Archaea; Eur…\n# ℹ 14 more variables: `GTDB-Tk Taxonomy Lineage` &lt;chr&gt;, `Bin Methods` &lt;chr&gt;,\n#   `Created By` &lt;chr&gt;, `Date Added` &lt;date&gt;, `Bin Completeness` &lt;dbl&gt;,\n#   `Bin Contamination` &lt;dbl&gt;, `Total Number of Bases` &lt;dbl&gt;, `5s rRNA` &lt;dbl&gt;,\n#   `16s rRNA` &lt;dbl&gt;, `23s rRNA` &lt;dbl&gt;, `tRNA Genes` &lt;dbl&gt;, `Gene Count` &lt;dbl&gt;,\n#   `Scaffold Count` &lt;dbl&gt;, `GOLD Study ID` &lt;chr&gt;\n\n\n\nstr(NEON_MAGs)\n\nspc_tbl_ [1,754 × 19] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ Bin ID                  : chr [1:1754] \"3300060887_39\" \"3300060914_30\" \"3300060650_39\" \"3300067032_2117\" ...\n $ Genome Name             : chr [1:1754] \"Terrestrial soil microbial communities from Guanica State Forest and Biosphere Reserve, Puerto Rico - GUAN_042-\"| __truncated__ \"Terrestrial soil microbial communities from Guanica State Forest and Biosphere Reserve, Puerto Rico - GUAN_043-\"| __truncated__ \"Terrestrial soil microbial communities from Healy, Denali National Park, Alaska, USA - HEAL_048-O-20210622-comp-1\" \"NEON combined assembly\" ...\n $ IMG Genome ID           : num [1:1754] 3.3e+09 3.3e+09 3.3e+09 3.3e+09 3.3e+09 ...\n $ Bin Quality             : chr [1:1754] \"MQ\" \"MQ\" \"MQ\" \"MQ\" ...\n $ Bin Lineage             : chr [1:1754] \"Archaea\" \"Archaea\" \"Archaea; Euryarchaeota; Methanobacteria; Methanobacteriales; Methanobacteriaceae; Methanobacterium; Methanobact\"| __truncated__ \"Archaea; Euryarchaeota; Methanobacteria; Methanobacteriales; Methanobacteriaceae; Methanobacterium; Methanobact\"| __truncated__ ...\n $ GTDB-Tk Taxonomy Lineage: chr [1:1754] NA NA NA NA ...\n $ Bin Methods             : chr [1:1754] \"MetaBAT v2:2.15, CheckM v1.2.1, GTDB-tk v2.1.1, GTDB database release R207_v2\" \"MetaBAT v2:2.15, CheckM v1.2.1, GTDB-tk v2.1.1, GTDB database release R207_v2\" \"MetaBAT v2:2.15, CheckM v1.2.1, GTDB-tk v2.1.1, GTDB database release R207_v2\" \"MetaBAT v2:2.17, CheckM v1.2.1, GTDB-tk v2.1.1, GTDB database release R207_v2\" ...\n $ Created By              : chr [1:1754] \"IMG_PIPELINE\" \"IMG_PIPELINE\" \"IMG_PIPELINE\" \"IMG_PIPELINE\" ...\n $ Date Added              : Date[1:1754], format: \"2023-04-16\" \"2023-04-14\" ...\n $ Bin Completeness        : num [1:1754] 89.8 96.1 76 83.7 96.7 ...\n $ Bin Contamination       : num [1:1754] 2.43 1.94 0.8 0.8 2.21 1.31 0.65 0 2.91 2.91 ...\n $ Total Number of Bases   : num [1:1754] 4009591 3938282 1690610 1598271 3294725 ...\n $ 5s rRNA                 : num [1:1754] 1 1 0 0 1 0 1 1 1 1 ...\n $ 16s rRNA                : num [1:1754] 0 0 0 0 0 1 1 0 0 0 ...\n $ 23s rRNA                : num [1:1754] 0 0 0 0 0 0 0 0 0 1 ...\n $ tRNA Genes              : num [1:1754] 41 43 25 33 50 42 46 42 27 27 ...\n $ Gene Count              : num [1:1754] 4918 4828 2012 1876 3082 ...\n $ Scaffold Count          : num [1:1754] 399 375 170 75 86 332 67 177 330 346 ...\n $ GOLD Study ID           : chr [1:1754] \"Gs0161344\" \"Gs0161344\" \"Gs0161344\" \"Gs0161344\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   `Bin ID` = col_character(),\n  ..   `Genome Name` = col_character(),\n  ..   `IMG Genome ID` = col_double(),\n  ..   `Bin Quality` = col_character(),\n  ..   `Bin Lineage` = col_character(),\n  ..   `GTDB-Tk Taxonomy Lineage` = col_character(),\n  ..   `Bin Methods` = col_character(),\n  ..   `Created By` = col_character(),\n  ..   `Date Added` = col_date(format = \"\"),\n  ..   `Bin Completeness` = col_double(),\n  ..   `Bin Contamination` = col_double(),\n  ..   `Total Number of Bases` = col_double(),\n  ..   `5s rRNA` = col_double(),\n  ..   `16s rRNA` = col_double(),\n  ..   `23s rRNA` = col_double(),\n  ..   `tRNA Genes` = col_double(),\n  ..   `Gene Count` = col_double(),\n  ..   `Scaffold Count` = col_double(),\n  ..   `GOLD Study ID` = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\n\n\nNEON_MAGs &lt;- read_csv(\"data/GOLD_Study_ID_Gs0161344_NEON.csv\") %&gt;% \n  select(-c(`GOLD Study ID`, `Bin Methods`, `Created By`, `Date Added`)) %&gt;% \n  mutate(\"Assembly Type\" = case_when(`Genome Name` == \"NEON combined assembly\" ~ `Genome Name`,\n                            TRUE ~ \"Individual\")) %&gt;% \n  mutate_at(\"Assembly Type\", str_replace, \"NEON combined assembly\", \"Combined\") %&gt;% \n  separate(`GTDB-Tk Taxonomy Lineage`, c(\"Domain\", \"Phylum\", \"Class\", \"Order\", \"Family\", \"Genus\"), \"; \", remove = FALSE) %&gt;% \n  mutate_at(\"Genome Name\", str_replace, \"Terrestrial soil microbial communities from \", \"\") %&gt;% \n  separate(`Genome Name`, c(\"Site\",\"Sample Name\"), \" - \") %&gt;% \n  mutate_at(\"Sample Name\", str_replace, \"-comp-1\", \"\") %&gt;%\n  separate(`Sample Name`, c(\"Site ID\",\"subplot.layer.date\"), \"_\", remove = FALSE,) %&gt;% \n  separate(`subplot.layer.date`, c(\"Subplot\", \"Layer\", \"Date\"), \"-\") \n\nRows: 1754 Columns: 19\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (8): Bin ID, Genome Name, Bin Quality, Bin Lineage, GTDB-Tk Taxonomy L...\ndbl  (10): IMG Genome ID, Bin Completeness, Bin Contamination, Total Number ...\ndate  (1): Date Added\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nWarning: Expected 6 pieces. Additional pieces discarded in 29 rows [54, 232, 267, 328,\n389, 400, 439, 473, 529, 531, 538, 669, 936, 1016, 1118, 1240, 1323, 1330,\n1477, 1484, ...].\n\n\nWarning: Expected 6 pieces. Missing pieces filled with `NA` in 429 rows [46, 50, 53, 55,\n56, 57, 61, 62, 65, 66, 67, 71, 76, 78, 79, 81, 89, 92, 96, 99, ...].\n\n\nWarning: Expected 2 pieces. Missing pieces filled with `NA` in 624 rows [4, 7, 8, 236,\n237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252,\n...].\n\n\n\nNEON_MAGs_bact_ind &lt;- NEON_MAGs %&gt;% \n  filter(Domain == \"Bacteria\") %&gt;% \n  filter(`Assembly Type` == \"Individual\") \n\n\nNEON_MAGs_Ind &lt;- NEON_MAGs %&gt;% \n  filter(`Site` != \"NEON combined assembly\") \n\n\nNEON_MAGs_co &lt;- NEON_MAGs %&gt;% \n  filter(`Assembly Type` == \"Combined\") \n\n\nNEON_MAGs_ind &lt;- NEON_MAGs %&gt;% \n  filter(`Assembly Type` == \"Individual\") \n\n\nsankey_data &lt;- NEON_MAGs_co %&gt;% \n  select(`GTDB-Tk Taxonomy Lineage`) %&gt;% \n  # NAs are likely Archaea\n  replace_na(list(`GTDB-Tk Taxonomy Lineage` = 'Archaea')) %&gt;% \n  # Pavian format requires p__ etc\n  separate(`GTDB-Tk Taxonomy Lineage`, c(\"Domain\", \"Phylum\", \"Class\", \"Order\", \"Family\", \"Genus\", \"Species\"), \"; \") \n\nWarning: Expected 7 pieces. Missing pieces filled with `NA` in 616 rows [1, 2, 3, 4, 5,\n6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, ...].\n\n\n\nsankey_data[] &lt;- t(apply(sankey_data, 1, zoo::na.locf))\n\n# Put the data into a format that can be read by the Sankey App\n\nsankey_data &lt;- sankey_data %&gt;% \n  unite(col = \"classification\", c(Domain, Phylum, Class, Order, Family, Genus, Species), sep='; ') %&gt;% \n  mutate_at(\"classification\", str_replace, \"Archaea\", \"d__Archaea\") %&gt;% \n  mutate_at(\"classification\", str_replace, \"Bacteria\", \"d__Bacteria\") %&gt;%  \n  mutate_at(\"classification\", str_replace, \"; \", \"|p__\") %&gt;% \n  mutate_at(\"classification\", str_replace, \"; \", \"|c__\") %&gt;% \n  mutate_at(\"classification\", str_replace, \"; \", \"|o__\") %&gt;% \n  mutate_at(\"classification\", str_replace, \"; \", \"|f__\") %&gt;% \n  mutate_at(\"classification\", str_replace, \"; \", \"|g__\") %&gt;% \n  mutate_at(\"classification\", str_replace, \"; \", \"|s__\")  \n\n# Create format for Pavian with counts for each taxonomic level\nsankey_data_s &lt;- sankey_data\nsankey_data_g &lt;- sankey_data\nsankey_data_f &lt;- sankey_data\nsankey_data_o &lt;- sankey_data\nsankey_data_c &lt;- sankey_data\nsankey_data_p &lt;- sankey_data\nsankey_data_d &lt;- sankey_data\n\nsankey_data_g$classification &lt;- sub(\"\\\\|s__.*\", \"\", sankey_data_g$classification)  \nsankey_data_f$classification &lt;- sub(\"\\\\|g__.*\", \"\", sankey_data_f$classification)  \nsankey_data_o$classification &lt;- sub(\"\\\\|f__.*\", \"\", sankey_data_o$classification)  \nsankey_data_c$classification &lt;- sub(\"\\\\|o__.*\", \"\", sankey_data_c$classification)  \nsankey_data_p$classification &lt;- sub(\"\\\\|c__.*\", \"\", sankey_data_p$classification)  \nsankey_data_d$classification &lt;- sub(\"\\\\|p__.*\", \"\", sankey_data_d$classification)  \n\nsankey_data_allTaxa &lt;- bind_rows(sankey_data_s, sankey_data_g, sankey_data_f, sankey_data_o, sankey_data_c, sankey_data_p, sankey_data_d) %&gt;% \n  mutate(classification = as.factor(classification)) %&gt;% \n  count(classification) %&gt;% \n# rename for Pavian format\n  rename(`#SampleID` = `classification`) %&gt;% \n  rename(`Metaphlan2_Analysis` = `n`) \n\n# Write file to input to Pavian Sankey\nwrite_tsv(sankey_data_allTaxa, \"data/NEON_MAG_co_pavian.txt\")\n\n\nNEON_MAGs_Ind_tax &lt;- NEON_MAGs_Ind %&gt;% \n  separate(`GTDB-Tk Taxonomy Lineage`, c(\"Domain\", \"Phylum\", \"Class\", \"Order\", \"Family\", \"Genus\"), \"; \", remove = FALSE) \n\nWarning: Expected 6 pieces. Additional pieces discarded in 21 rows [51, 229, 272, 283,\n302, 346, 348, 355, 675, 793, 851, 858, 951, 956, 959, 972, 981, 996, 997,\n1037, ...].\n\n\nWarning: Expected 6 pieces. Missing pieces filled with `NA` in 282 rows [43, 47, 50, 52,\n53, 54, 58, 59, 62, 63, 64, 68, 73, 75, 76, 78, 86, 89, 93, 96, ...].\n\n\n\ndatatable(\n  NEON_MAGs_Ind_tax %&gt;% \n    count(Phylum, sort = TRUE)\n)\n\n\n\n\n\n\nNEON_MAGs_Ind_tax_sample &lt;- NEON_MAGs_Ind_tax %&gt;% \n  # Get rid of the the common string \"Soil microbial communities from \"\n  mutate_at(\"Site\", str_replace, \"Terrestrial soil microbial communities from \", \"\") %&gt;% \n  # Use the first `-` to split the column in two\n  separate(`Site`, c(\"Site\",\"Sample Name\"), \" - \") %&gt;% \n  # Get rid of the the common string \"S-comp-1\"\n  mutate_at(\"Sample Name\", str_replace, \"-comp-1\", \"\") %&gt;%\n  # separate the Sample Name into Site ID and plot info\n  separate(`Sample Name`, c(\"Site ID\",\"subplot.layer.date\"), \"_\", remove = FALSE,) %&gt;% \n  # separate the plot info into 3 columns\n  separate(`subplot.layer.date`, c(\"Subplot\", \"Layer\", \"Date\"), \"-\") \n\nWarning: Expected 2 pieces. Missing pieces filled with `NA` in 1130 rows [1, 2, 3, 4, 5,\n6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, ...].\n\n\n\ndatatable(\n  NEON_MAGs_Ind_tax_sample %&gt;% \n    count(Site, sort = TRUE)\n)\n\n\n\n\n\n\ndatatable(\n  NEON_MAGs_Ind_tax %&gt;% \n    count(Phylum, sort = TRUE)\n)\n\n\n\n\n\n\nNEON_MAGs_bact_ind %&gt;% \n  ggplot(aes(x = fct_rev(fct_infreq(Subplot)), fill = Site)) +\n  geom_bar() +\n  coord_flip() +\n  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1), axis.text.y = element_text(size = 5)) +  \n  labs(title = \"MAG Counts for Each Subplot\", x = \"Subplot\", y = \"Count\") +\n  theme_classic()\n\n\n\n\n\n\n\n\n\nNEON_MAGs_bact_ind %&gt;% \nggplot(aes(x = fct_rev(fct_infreq(Site)), fill = Phylum)) +\n  geom_bar() +\n    coord_flip() +\n   theme(axis.text.x = element_text(size=10), axis.text.y = element_text(size=5)) + \n  labs(title = \"MAGs Found at Each Site (By Phylum)\", x = \"Site\", y = \"Count\") \n\n\n\n\n\n\n\n\n\nNEON_MAGs_bact_ind %&gt;% \n   filter(is.na(Genus)) %&gt;%\n  ggplot(aes(x =fct_infreq(Phylum))) +\n  geom_bar() +\n  coord_flip() +\n  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1), axis.text.y = element_text(size = 5)) + \n  labs(title = \"Phyla with Novel Genera\", x = \"Phylum\", y = \"Count of Novel Bacteria\") +\n  theme_classic()\n\n\n\n\n\n\n\n\n\nWREF_Data &lt;- NEON_MAGs %&gt;%\n  filter(`Site ID` == \"WREF\")\n\n\nWREF_Data %&gt;% \n  ggplot(aes(x = `Bin Quality`)) +\n  geom_bar() +\n  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1), axis.text.y = element_text(size = 5)) + \n  labs(title = \"Bacteria Quality at WREF\", x = \"Quality\", y = \"Count of Bacteria\") +\n  theme_classic()\n\n\n\n\n\n\n\n\n\nWREF_Data %&gt;%\n  ggplot(aes(x = `Layer`)) +\n  geom_bar() +\n  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1), axis.text.y = element_text(size = 5)) + \n  labs(title = \"Soil Composition at WREF\", x = \"Layer\", y = \"Count of Bacteria\") +\n  theme_classic()\n\n\n\n\n\n\n\n\n\nWREF_Data %&gt;% \nggplot(aes(x = fct_infreq(Phylum), fill = Class)) +\n  geom_bar() +\n  coord_flip() +\n  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1), axis.text.y = element_text(size = 3))+\n  labs(title = \"Number of MAGs Per Phylum at WREF\", x = \"Phylum\", y = \"MAGs\")\n\n\n\n\n\n\n\n\n\nAcido_Data &lt;- NEON_MAGs %&gt;% \n  filter(Phylum == \"Acidobacteriota\")\n\n\nAcido_Data %&gt;% \nggplot(aes(x = fct_rev(fct_infreq(Site)), fill = Class)) +\n  geom_bar(position = position_dodge2(width = 0.9, preserve = \"single\")) +\n  coord_flip() +\n   theme(axis.text.x = element_text(size=10), axis.text.y = element_text(size=5)) + \n  labs(title = \"Acidobacteria Found at Each Site (By Class)\", x = \"Site\", y = \"Count\") \n\n\n\n\n\n\n\n\n\nAcido_Data %&gt;% \nggplot(aes(x = fct_rev(fct_infreq(Site)), fill = Order)) +\n  geom_bar(position = position_dodge2(width = 0.9, preserve = \"single\")) +\n  coord_flip() +\n   theme(axis.text.x = element_text(size=10), axis.text.y = element_text(size=5)) + \n  labs(title = \"Acido. Orders at Each Site\", x = \"Site\", y = \"Count\") \n\n\n\n\n\n\n\n\n\nNEON_metagenomes &lt;- read_tsv(\"data/exported_img_data_Gs0161344_NEON.tsv\") %&gt;% \n  rename(`Genome Name` = `Genome Name / Sample Name`) %&gt;% \n  filter(str_detect(`Genome Name`, 're-annotation', negate = T)) %&gt;% \n  filter(str_detect(`Genome Name`, 'WREF plot', negate = T)) \n\nRows: 176 Columns: 46\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr (18): Domain, Sequencing Status, Study Name, Genome Name / Sample Name, ...\ndbl (16): taxon_oid, IMG Genome ID, Depth In Meters, Elevation In Meters, Ge...\nlgl (12): Altitude In Meters, Chlorophyll Concentration, Longhurst Code, Lon...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nNEON_metagenomes &lt;- NEON_metagenomes %&gt;% \n  # Get rid of the the common string \"Soil microbial communities from \"\n  mutate_at(\"Genome Name\", str_replace, \"Terrestrial soil microbial communities from \", \"\") %&gt;% \n  # Use the first `-` to split the column in two\n  separate(`Genome Name`, c(\"Site\",\"Sample Name\"), \" - \") %&gt;% \n  # Get rid of the the common string \"-comp-1\"\n  mutate_at(\"Sample Name\", str_replace, \"-comp-1\", \"\") %&gt;%\n  # separate the Sample Name into Site ID and plot info\n  separate(`Sample Name`, c(\"Site ID\",\"subplot.layer.date\"), \"_\", remove = FALSE,) %&gt;% \n  # separate the plot info into 3 columns\n  separate(`subplot.layer.date`, c(\"Subplot\", \"Layer\", \"Date\"), \"-\") \n\nWarning: Expected 2 pieces. Missing pieces filled with `NA` in 1 rows [53].\n\n\n\nNEON_chemistry &lt;- read_tsv(\"data/neon_plot_soilChem1_metadata.tsv\") %&gt;% \n  # remove -COMP from genomicsSampleID\n  mutate_at(\"genomicsSampleID\", str_replace, \"-COMP\", \"\") \n\nRows: 87 Columns: 17\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr   (5): genomicsSampleID, siteID, plotID, nlcdClass, horizon\ndbl  (11): decimalLatitude, decimalLongitude, elevation, soilTemp, d15N, org...\ndate  (1): collectionDate\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nNEON_MAGs %&gt;%\n  left_join(NEON_metagenomes, by = \"Site ID\") %&gt;%\n  left_join(NEON_chemistry, by = c(\"Site ID\" = \"siteID\")) %&gt;%\n  filter(Phylum == \"Acidobacteriota\") %&gt;%\n  ggplot(aes(x = fct_infreq(`Site ID`), y = `soilTemp`)) +\n  geom_boxplot() +\n  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +\n  labs(title = \"Soil Temp by Site\", x = \"Site ID\", y = \"Soil Temp\")\n\nWarning in left_join(., NEON_metagenomes, by = \"Site ID\"): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 1 of `x` matches multiple rows in `y`.\nℹ Row 12 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\nWarning in left_join(., NEON_chemistry, by = c(`Site ID` = \"siteID\")): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 1 of `x` matches multiple rows in `y`.\nℹ Row 1 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\nWarning: Removed 188 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n\n\n\n\n\n\n\n\n\n\nNEON_MAGs %&gt;%\n  left_join(NEON_metagenomes, by = \"Sample Name\") %&gt;%\n  left_join(NEON_chemistry, by = c(\"Sample Name\" = \"genomicsSampleID\")) %&gt;%\n    filter(Phylum == \"Acidobacteriota\") %&gt;%\n  ggplot(aes(x = fct_infreq(`Ecosystem Subtype`), y = soilTemp)) +\n  geom_point(aes(color=Class)) +\n  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +\n  labs(title = \"Soil Temp by Ecosystem Subtype\", x = \"Ecosystem Subtype\", y = \"Soil Temp\")\n\nWarning: Removed 125 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n\nNEON_MAGs %&gt;%\n  left_join(NEON_metagenomes, by = \"Sample Name\") %&gt;%\n  left_join(NEON_chemistry, by = c(\"Sample Name\" = \"genomicsSampleID\")) %&gt;%\n    filter(Phylum == \"Acidobacteriota\") %&gt;%\n  ggplot(aes(x = fct_infreq(`Ecosystem Subtype`), y = soilInCaClpH)) +\n  geom_point(aes(color=Class), size = 2) +\n  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +\n  labs(title = \"Soil in CaCL pH by NLCD Class\", x = \"Ecosystem Subtype\", y = \"Soil in CaCl pH\") +\n  theme(legend.title = element_text(size=4), legend.text=element_text(size=4))\n\nWarning: Removed 125 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n\nNEON_MAGs %&gt;%\n  left_join(NEON_metagenomes, by = \"Sample Name\") %&gt;%\n  left_join(NEON_chemistry, by = c(\"Sample Name\" = \"genomicsSampleID\")) %&gt;%\n    filter(Phylum == \"Acidobacteriota\") %&gt;%\n  ggplot(aes(x = fct_infreq(Class), y = soilInWaterpH)) +\n  geom_bin_2d() +\n  theme(axis.text.x = element_text(angle=90, vjust=1, hjust=1)) +\n  labs(title = \"Class v Soil pH in Water\", x = \"Class\", y = \"Soil pH in Water\") +\n  theme(legend.title = element_text(size=4), legend.text=element_text(size=4))\n\nWarning: Removed 125 rows containing non-finite outside the scale range\n(`stat_bin2d()`).\n\n\n\n\n\n\n\n\n\n\nNEON_MAGs %&gt;%\n  left_join(NEON_metagenomes, by = \"Sample Name\") %&gt;%\n  left_join(NEON_chemistry, by = c(\"Sample Name\" = \"genomicsSampleID\")) %&gt;%\n    filter(Phylum == \"Acidobacteriota\") %&gt;%\n  ggplot(aes(x = soilTemp, y = elevation)) +\n  geom_point(aes(color= siteID), size = 2) +\n  theme(axis.text.x = element_text(angle=90, vjust=1, hjust=1)) +\n  labs(title = \"Soil Temp v Elevation (By Site)\", x = \"Soil Temp\", y = \"Elevation\") +\n  theme(legend.title = element_text(size=4), legend.text=element_text(size=4))\n\nWarning: Removed 125 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n\nNEON_MAGs &lt;- read_csv(\"data/GOLD_Study_ID_Gs0161344_NEON_2024_4_21.csv\") %&gt;% \n  # remove columns that are not needed for data analysis\n  select(-c(`GOLD Study ID`, `Bin Methods`, `Created By`, `Date Added`, `Bin Lineage`)) %&gt;% \n  # create a new column with the Assembly Type\n  mutate(\"Assembly Type\" = case_when(`Genome Name` == \"NEON combined assembly\" ~ `Genome Name`,\n                            TRUE ~ \"Individual\")) %&gt;% \n  mutate_at(\"Assembly Type\", str_replace, \"NEON combined assembly\", \"Combined\") %&gt;% \n  mutate_at(\"GTDB-Tk Taxonomy Lineage\", str_replace, \"d__\", \"\") %&gt;%  \n  mutate_at(\"GTDB-Tk Taxonomy Lineage\", str_replace, \"p__\", \"\") %&gt;% \n  mutate_at(\"GTDB-Tk Taxonomy Lineage\", str_replace, \"c__\", \"\") %&gt;% \n  mutate_at(\"GTDB-Tk Taxonomy Lineage\", str_replace, \"o__\", \"\") %&gt;% \n  mutate_at(\"GTDB-Tk Taxonomy Lineage\", str_replace, \"f__\", \"\") %&gt;% \n  mutate_at(\"GTDB-Tk Taxonomy Lineage\", str_replace, \"g__\", \"\") %&gt;% \n  mutate_at(\"GTDB-Tk Taxonomy Lineage\", str_replace, \"s__\", \"\") %&gt;%\n  separate(`GTDB-Tk Taxonomy Lineage`, c(\"Domain\", \"Phylum\", \"Class\", \"Order\", \"Family\", \"Genus\", \"Species\"), \";\", remove = FALSE) %&gt;% \n  mutate_at(\"Domain\", na_if,\"\") %&gt;% \n  mutate_at(\"Phylum\", na_if,\"\") %&gt;% \n  mutate_at(\"Class\", na_if,\"\") %&gt;% \n  mutate_at(\"Order\", na_if,\"\") %&gt;% \n  mutate_at(\"Family\", na_if,\"\") %&gt;% \n  mutate_at(\"Genus\", na_if,\"\") %&gt;% \n  mutate_at(\"Species\", na_if,\"\") %&gt;% \n  \n  # Get rid of the the common string \"Soil microbial communities from \"\n  mutate_at(\"Genome Name\", str_replace, \"Terrestrial soil microbial communities from \", \"\") %&gt;% \n  # Use the first `-` to split the column in two\n  separate(`Genome Name`, c(\"Site\",\"Sample Name\"), \" - \") %&gt;% \n  # Get rid of the the common string \"S-comp-1\"\n  mutate_at(\"Sample Name\", str_replace, \"-comp-1\", \"\") %&gt;%\n  # separate the Sample Name into Site ID and plot info\n  separate(`Sample Name`, c(\"Site ID\",\"subplot.layer.date\"), \"_\", remove = FALSE,) %&gt;% \n  # separate the plot info into 3 columns\n  separate(`subplot.layer.date`, c(\"Subplot\", \"Layer\", \"Date\"), \"-\") \n\nRows: 1754 Columns: 19\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (8): Bin ID, Genome Name, Bin Quality, Bin Lineage, GTDB-Tk Taxonomy L...\ndbl  (10): IMG Genome ID, Bin Completeness, Bin Contamination, Total Number ...\ndate  (1): Date Added\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nWarning: Expected 2 pieces. Missing pieces filled with `NA` in 624 rows [1131, 1132,\n1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145,\n1146, 1147, 1148, 1149, 1150, ...].\n\n\n\nNEON_metagenomes &lt;- read_tsv(\"data/exported_img_data_Gs0161344_NEON.tsv\") %&gt;% \n  select(-c(`Domain`, `Sequencing Status`, `Sequencing Center`)) %&gt;% \n  rename(`Genome Name` = `Genome Name / Sample Name`) %&gt;% \n  filter(str_detect(`Genome Name`, 're-annotation', negate = T)) %&gt;% \n  filter(str_detect(`Genome Name`, 'WREF plot', negate = T)) \n\nRows: 176 Columns: 46\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr (18): Domain, Sequencing Status, Study Name, Genome Name / Sample Name, ...\ndbl (16): taxon_oid, IMG Genome ID, Depth In Meters, Elevation In Meters, Ge...\nlgl (12): Altitude In Meters, Chlorophyll Concentration, Longhurst Code, Lon...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nNEON_metagenomes &lt;- NEON_metagenomes %&gt;% \n  # Get rid of the the common string \"Soil microbial communities from \"\n  mutate_at(\"Genome Name\", str_replace, \"Terrestrial soil microbial communities from \", \"\") %&gt;% \n  # Use the first `-` to split the column in two\n  separate(`Genome Name`, c(\"Site\",\"Sample Name\"), \" - \") %&gt;% \n  # Get rid of the the common string \"-comp-1\"\n  mutate_at(\"Sample Name\", str_replace, \"-comp-1\", \"\") %&gt;%\n  # separate the Sample Name into Site ID and plot info\n  separate(`Sample Name`, c(\"Site ID\",\"subplot.layer.date\"), \"_\", remove = FALSE,) %&gt;% \n  # separate the plot info into 3 columns\n  separate(`subplot.layer.date`, c(\"Subplot\", \"Layer\", \"Date\"), \"-\") \n\nWarning: Expected 2 pieces. Missing pieces filled with `NA` in 1 rows [53].\n\n\n\nNEON_chemistry &lt;- read_tsv(\"data/neon_plot_soilChem1_metadata.tsv\") %&gt;% \n  # remove -COMP from genomicsSampleID\n  mutate_at(\"genomicsSampleID\", str_replace, \"-COMP\", \"\") \n\nRows: 87 Columns: 17\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr   (5): genomicsSampleID, siteID, plotID, nlcdClass, horizon\ndbl  (11): decimalLatitude, decimalLongitude, elevation, soilTemp, d15N, org...\ndate  (1): collectionDate\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nNEON_MAGs_metagenomes_chemistry &lt;- NEON_MAGs %&gt;% \n  left_join(NEON_metagenomes, by = \"Sample Name\") %&gt;% \n  left_join(NEON_chemistry, by = c(\"Sample Name\" = \"genomicsSampleID\")) %&gt;% \n  rename(\"label\" = \"Bin ID\")\n\n\ntree_arc &lt;- read.tree(\"NEON/gtdbtk.ar53.decorated.tree\")\ntree_bac &lt;- read.tree(\"data/gtdbtk.bac120.decorated.tree\")\n\n\n# Make a vector with the internal node lables\nnode_vector_bac = c(tree_bac$tip.label,tree_bac$node.label)\n\n# Search for your Phylum or Class\ngrep(\"Acidobacteriota\", node_vector_bac, value = TRUE)\n\n[1] \"'1.0:p__Acidobacteriota'\"\n\n\n\nmatch(grep(\"Acidobacteriota\", node_vector_bac, value = TRUE), node_vector_bac)\n\n[1] 2673\n\n\n\ntree_bac_node_Acidobacteriota &lt;- Preorder(tree_bac)\ntree_Acidobacteriota &lt;- Subtree(tree_bac_node_Acidobacteriota, 2673)\n\n\nggtree(tree_Acidobacteriota) +\n  geom_tiplab(size=3) +\n  xlim(0,28) \n\n\n\n\n\n\n\n\n\nggtree(tree_Acidobacteriota, layout=\"circular\")  %&lt;+%\n  NEON_MAGs_metagenomes_chemistry + \n  geom_tiplab(size=2, hjust=-.1) +\n  xlim(0,28) +\n  geom_point(mapping=aes(color=Class, shape = `Assembly Type`)) \n\nWarning: Removed 305 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n\nggtree(tree_bac, layout=\"circular\", branch.length=\"none\") +\n    geom_hilight(node=2673, fill=\"steelblue\", alpha=.6) +\n    geom_cladelab(node=2673, label=\"Acidobacteriota\", align=TRUE, hjust=1.1,  \n                  offset = 0, textcolor='steelblue', barcolor='steelblue')\n\n\n\n\n\n\n\n\n\nggtree(tree_Acidobacteriota)  %&lt;+%\n  NEON_MAGs_metagenomes_chemistry + \n  geom_tiplab(size=2, hjust=-.1) +\n  xlim(0,28) +\n  geom_point(mapping=aes(color=`soilInWaterpH`)) \n\n\n\n\n\n\n\n\n\nNEON_MAGs_metagenomes_chemistry_WREF &lt;- NEON_MAGs_metagenomes_chemistry %&gt;% \n  filter(`Site ID.x` == \"WREF\") %&gt;% \n  filter(Phylum == \"Acidobacteriota\")\n\nWREF_MAGs_label &lt;- NEON_MAGs_metagenomes_chemistry_WREF$label\n\ntree_bac_WREF_MAGs &lt;-drop.tip(tree_bac,tree_bac$tip.label[-match(WREF_MAGs_label, tree_bac$tip.label)])\n\n\nggtree(tree_bac_WREF_MAGs, layout=\"circular\")  %&lt;+%\n  NEON_MAGs_metagenomes_chemistry +\n  geom_point(mapping=aes(color=Phylum)) +\n  theme(legend.title=element_text(size=5), legend.text=element_text(size=5), legend.spacing.y = unit(0.02, \"cm\"))\n\n\n\n\n\n\n\n\n\nNEON_MAGs_metagenomes_chemistry_WREF &lt;- NEON_MAGs_metagenomes_chemistry %&gt;% \n  filter(`Site ID.x` == \"WREF\") \n\nWREF_MAGs_label &lt;- NEON_MAGs_metagenomes_chemistry_WREF$label\n\ntree_bac_WREF_MAGs &lt;-drop.tip(tree_bac,tree_bac$tip.label[-match(WREF_MAGs_label, tree_bac$tip.label)])\n\n\nggtree(tree_bac_WREF_MAGs, layout=\"circular\")  %&lt;+%\n  NEON_MAGs_metagenomes_chemistry +\n  geom_point(mapping=aes(color=Phylum)) +\n  theme(legend.title=element_text(size=5), legend.text=element_text(size=5), legend.spacing.y = unit(0.02, \"cm\"))\n\n\n\n\n\n\n\n\n\nNEON_MAGs_metagenomes_chemistry_soilInCaClpH &lt;- NEON_MAGs_metagenomes_chemistry %&gt;% \n  filter(soilInCaClpH &lt; 0) %&gt;% \n  filter(Domain == \"Bacteria\")\n\n\nsoilInCaClpH_MAGs_label &lt;- NEON_MAGs_metagenomes_chemistry_soilInCaClpH\n\n\ntree_bac_soilInCaClpH_MAGs &lt;-drop.tip(tree_bac,tree_bac$tip.label[-match(soilInCaClpH_MAGs_label, tree_bac$tip.label)])\n\n\nggtree(tree_bac_soilInCaClpH_MAGs, layout=\"circular\")  %&lt;+%\n  NEON_MAGs_metagenomes_chemistry +\n  geom_point(mapping=aes(color=Phylum)) \n\n\n\n\n\n\n\n\n\nNEON_MAGs_metagenomes_chemistry_soilInCaClpH &lt;- NEON_MAGs_metagenomes_chemistry %&gt;% \n  filter(soilInWaterpH &lt; 5) %&gt;% \n  filter(Domain == \"Bacteria\")\n# Make a vector of the MAGs labels\nsoilInCaClpH_MAGs_label &lt;- NEON_MAGs_metagenomes_chemistry_soilInCaClpH$label\n\n# Use appropriate Bacteria or Archaea tree to select your site MAG labels\ntree_bac_soilInCaClpH_MAGs &lt;-drop.tip(tree_bac,tree_bac$tip.label[-match(soilInCaClpH_MAGs_label, tree_bac$tip.label)])\n\n# Now make a tree with your MAGs of interest\nggtree(tree_bac_soilInCaClpH_MAGs, layout=\"circular\")  %&lt;+%\n  NEON_MAGs_metagenomes_chemistry +\n  geom_point(mapping=aes(color=Phylum)) \n\n\n\n\n\n\n\n\n\nNEON_chemistry_WREF &lt;- NEON_chemistry %&gt;%\n  filter(siteID == 'WREF') \n\n\n  NEON_chemistry_WREF %&gt;%\n  ggplot(aes(x = soilInWaterpH, y= soilTemp)) +\n  geom_point(aes(color= nlcdClass)) +\n  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1), axis.text.y = element_text(size = 5)) + \n  labs(title = \"Soil pH v Soil Temp at WREF\", x = \"Soil in Water pH\", y = \"Soil Temp\") \n\n\n\n\n\n\n\n\n\nNEON_chemistry_WREF %&gt;%   \nggplot(aes(x = `elevation`, y = `genomicsSampleID`, color = `soilTemp`)) +\n  geom_point() +\n  labs(title = \"Elevation of Samples at WREF\", x = \"Elevation\", y = \"Sample ID\") +\n  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1))\n\n\n\n\n\n\n\n\n\nAcido_Data %&gt;% \n  filter(`Site ID`== 'WREF') %&gt;%\n  ggplot(aes(x = fct_rev(fct_infreq(Class)), fill = Order)) +\n  geom_bar() +\n  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1), axis.text.y = element_text(size = 5)) +  \n  labs(title = \"Acidobacteria Class Count in WREF\", x = \"Class\", y = \"Count\") +\n  theme_classic()\n\n\n\n\n\n\n\n\n\nAcido_Data %&gt;% \n  filter(`Site ID`== 'WREF') %&gt;%\n  ggplot(aes(x = fct_rev(fct_infreq(Class)), y= `Total Number of Bases`, fill = Order)) +\n  geom_point(aes(color= Order)) +\n  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1), axis.text.y = element_text(size = 5)) +  \n  labs(title = \"Total Number of Bases in Acido Classes in WREF\", x = \"Class\", y = \"Number of Bases\") +\n  theme_classic()"
  },
  {
    "objectID": "about.html#neon-data",
    "href": "about.html#neon-data",
    "title": "Acidobacteriota and WREF",
    "section": "NEON Data",
    "text": "NEON Data\nThe National Ecological Observatory Network (NEON) is a collective working towards better understanding ecosystems in the United States and how they are changing. It is comprised of data collected from across the country including freshwater and terrestrial ecosystems ranging from steams and rivers to deserts. Through collaboration between a myriad of scientific communities it has collected information with the aim of optimizing technology and construction to maintaining ecosystems."
  },
  {
    "objectID": "about.html#wref-site-data",
    "href": "about.html#wref-site-data",
    "title": "Acidobacteriota and WREF",
    "section": "WREF Site Data",
    "text": "WREF Site Data\n\n\n\n\n\n\n\n\n\n\nSource: Code\nThe graph above displays the number of MAGs in each phylum at WREF and is colored by class.\n\n\n\n\n\n\n\n\n\n\nSource: Code\nThe tree above displays the phylum of bacteria found at WREF.\n\n\n\n\n\n\n\n\n\n\nSource: Code\nThe bar graph above displays the bin quality, medium (MQ) or high (HQ), of the data collected from WREF.\n\n\n\n\n\n\n\n\n\n\nSource: Code\nThe bar graph above displays the soil composition found at WREF. Soil was classified as either organic (O) or mineral (M).\n\n\n\n\n\n\n\n\n\n\nSource: Code\nThe scatterplot above displays the soil in water pH versus the soil temperature of samples collected at WREF.\n\n\n\n\n\n\n\n\n\n\nSource: Code\nThe scatterplot above displays the elevation and sample ID of data collected at WREF. It is colored by soil temperature."
  },
  {
    "objectID": "about.html#acidobacteriota-data",
    "href": "about.html#acidobacteriota-data",
    "title": "Acidobacteriota and WREF",
    "section": "Acidobacteriota Data",
    "text": "Acidobacteriota Data\n\nknitr::include_url(\"data/sankey-NEON_MAG_ind_pavian_acido.txt.html\")\n\n\n\nThe sankey plot above depicts the taxonomic levels of Acidobacteria and is filtered for the individual assemblies.\n\nknitr::include_url(\"data/sankey-NEON_MAG_co_pavian_acido.txt.html\")\n\n\n\nThe sankey plot above depicts the taxonomic levels of Acidobacteriota and is filtered for the combined assemblies.\n\n\n\n\n\n\n\n\n\n\nSource: Code\nThe tree above displays the phylum Acidobacteriota’s taxonomic clade data and is colored by class.\n\n\n\n\n\n\n\n\n\n\nSource: Code\nThe tree above displays the phylum Acidobacteriota in relation to other bacterial phyla.\n\n\n\n\n\n\n\n\n\n\nSource: Code\nThe tree above displays bacteria phlya that were found in samples where the soil in water had a pH of less than 5.\n\n\n\n\n\n\n\n\n\n\nSource: Code\nThe graph above displays the count of Acidobacteria found at each NEON site and is organized and colored by class.\n\n\n\n\n\n\n\n\n\n\nSource: Code\nThe graph above displays the count of Acidobacteria found at each NEON site and is organized and colored by order.\n\n\n\n\n\n\n\n\n\n\nSource: Code\nThe graph above displays the soil temperature at each NEON site where Acidobacteriota data was collected.\n\n\n\n\n\n\n\n\n\n\nSource: Code\nThe scatterplot above displays the site temperature by ecosystem subtype. It is filtered to include data only Acidobacteriota data and is colored by class.\n\n\n\n\n\n\n\n\n\n\nSource: Code\nThe scatterplot above displays the pH of soil samples in CaCl by the ecosystem subtype they were extracted from. It is filtered to include only Acidobacteriota data and is colored by class.\n\n\n\n\n\n\n\n\n\n\nSource: Code\nThe bin plot above displays the pH of soil samples in water by the class of Acidobacteriota found in them. It is colored by count where darker colors mean higher counts."
  },
  {
    "objectID": "about.html#neon-data-1",
    "href": "about.html#neon-data-1",
    "title": "Acidobacteriota and WREF",
    "section": "NEON Data",
    "text": "NEON Data\n\n\n\nDatatable of MAG counts at each NEON site\n\n\n\n\n\n\n\n\n\nSource: Code\n\n\n\nData table of MAG counts per Phylum\n\n\n\n\n\n\n\n\n\nSource: Code\n\n\n\n\n\n\n\n\n\n\nSource: Code\nThe graph above displays the MAG counts at each NEON subplot and is colored by site.\n\n\n\n\n\n\n\n\n\n\nSource: Code\nThe graph above displays the total number of MAGs at each site and is colored by fill.\n\n\n\n\n\n\n\n\n\n\nSource: Code\nThe graph above displays the count of novel bacteria genera discovered per their phyla."
  },
  {
    "objectID": "about.html#acknowledgements",
    "href": "about.html#acknowledgements",
    "title": "Acidobacteriota and WREF",
    "section": "Acknowledgements",
    "text": "Acknowledgements\nI would like to thank Professor Jeffrey Blanchard and my team members, Mary McCloskey and Sukhbir Singh, for their guidance and support in creating this project. I also want to acknowledge NEON for supplying the data used. My labs are written in R."
  },
  {
    "objectID": "about.html#acidobacteriota-at-wref",
    "href": "about.html#acidobacteriota-at-wref",
    "title": "Acidobacteriota and WREF",
    "section": "Acidobacteriota at WREF",
    "text": "Acidobacteriota at WREF\n\nknitr::include_url(\"data/sankey-NEON_MAG_ind_pavian_WREF.txt.html\")\n\n\n\nThe sankey plot above depicts the taxonomic levels of Acidobacteria found at WREF and is filtered for the individual assemblies.\n\n\n\n\n\n\n\n\n\n\nSource: Code\nThe tree above displays the phylogeny of Acidobacteriota that are found at WREF.\n\n\n\n\n\n\n\n\n\n\nSource: Code\nThe plot above displays the Acidobacteriota in WREF by class and is colored by order\n\n\n\n\n\n\n\n\n\n\nSource: Code\nThe scatterplot above displays the total number of bases samples of Acidobacteria from WREF have. It is organized by class and colored by order."
  }
]