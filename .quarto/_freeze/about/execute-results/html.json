{
  "hash": "2f784a215a17e0c2bf34da1ecc1a995d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Actinobacteriota and WREF\"\neditor: visual\noutput:\n  html_document:\n    collapse: true\n    code_folding: hide\n    toc: true\n    toc_depth: 4\n    theme: \"minty\"\n    highlight: espresso\n---\n\n\n# Abstract\n\nUtilizing the coding knowledge and skills learned in Biology 476: Evolutionary Genomics and Bioinformatics, students built a github repository and Quatro website. The website includes graphs and tables created by the students that showcase data from NEON metagenomes. The results are visual representations of data from the WREF collection site in Vancouver, WA as well as data on the bacteria phylum acidobacteriota. RESULTS\n\n# Motivating Reasons\n\nThe motivating reasons behind this project were to further develop my skills in R Posit Cloud, to practice integration and manipulation of data, and to learn about acidobacteriota and the WREF site. I took Biology 478: Human Genome Analysis in the fall of 2023 and this gave me some foundational skills for working with data in R. Through my engagement with this project, I have learned more about data wrangling, ggplot, ggtrees, quatro website building, and github repositories. These will be very useful to my future career in biological research as I will be able to analyze and present data that I have collected myself for presentations and papers. The topic of this project, acidobacteriota and WREF, have given me insight into a particular bacterial phylum and its evolutionary lineage. It also shed light onto how data collection sites are chosen, managed, and utilized.\n\n# Introduction\n\n## Data Collection Site: WREF\n\nThe Wind River Experimental Forest is a field site about 40 miles NE of Vancouver, WA in the Gifford Pinchot National Forest. This is in Neon's Pacific Northwest Domain (D16). The area is populated by douglas firs and western hemlocks of diverse ages. The region's climate is temperate with an average temperature of 9.2°C and average precipitation of 87.6 in. In the valley of volcanoes, Mt. Rainier and Mt. St. Helens, the soil here is comprised of volcanic ashe, pumice, basalt bedrock, and andesite (leftover from lava flows). Among the animals living in this area are elk, bobcats, cougars, black bears, various birds, and many small mammals. After being used as a seedling nursery for post-wildfire forest rehabilitation for almost a century, the NEON site was established in 2006 and sampling for the project began in 2018.\n\n![A beautiful view of a lake in the WREF site](WREFsitepretty.jpeg){fig-align=\"center\"}\n\n![Map of the WREF site](WREFmap.png){fig-align=\"center\"}\n\n## Bacterial Phylum: Acidobacteriota\n\nThis phylum of bacteria is gram-negative and are most prevalent in soils (though they are present in a myriad of different mediums) (\\@Wikipedia). The name \"acidobacteriota\" comes from their acidophilic– or acid loving– nature. Many species thrive in acidic environments. The majority of them are also aerobic while a minority in anaerobic. The first species of this phylum was characterized in the early 90's (Acidobacterium capsulatum), however, the phylum itself was not identified until the 2010's (\\@huber_editorial_2022. Within this phylum 22 genera and 40 species have been identified.\n\n![Acidobacterium cf. capsulatum](Acidobacterium.jpg){fig-align=\"center\"}\n\n# Methods\n\n# Results\n### Libraries and Wrangling\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(knitr)\nlibrary(DT)\nlibrary(plotly)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'plotly'\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\nThe following object is masked from 'package:stats':\n\n    filter\n\nThe following object is masked from 'package:graphics':\n\n    layout\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nNEON_MAGs <- read_csv(\"data/GOLD_Study_ID_Gs0161344_NEON.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 1754 Columns: 19\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (8): Bin ID, Genome Name, Bin Quality, Bin Lineage, GTDB-Tk Taxonomy L...\ndbl  (10): IMG Genome ID, Bin Completeness, Bin Contamination, Total Number ...\ndate  (1): Date Added\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nNEON_MAGs_Ind <- NEON_MAGs %>% \n  filter(`Genome Name` != \"NEON combined assembly\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nNEON_MAGs <- read_csv(\"data/GOLD_Study_ID_Gs0161344_NEON.csv\") %>% \n  select(-c(`GOLD Study ID`, `Bin Methods`, `Created By`, `Date Added`)) %>% \n  mutate(\"Assembly Type\" = case_when(`Genome Name` == \"NEON combined assembly\" ~ `Genome Name`,\n                            TRUE ~ \"Individual\")) %>% \n  mutate_at(\"Assembly Type\", str_replace, \"NEON combined assembly\", \"Combined\") %>% \n  separate(`GTDB-Tk Taxonomy Lineage`, c(\"Domain\", \"Phylum\", \"Class\", \"Order\", \"Family\", \"Genus\"), \"; \", remove = FALSE) %>% \n  mutate_at(\"Genome Name\", str_replace, \"Terrestrial soil microbial communities from \", \"\") %>% \n  separate(`Genome Name`, c(\"Site\",\"Sample Name\"), \" - \") %>% \n  mutate_at(\"Sample Name\", str_replace, \"-comp-1\", \"\") %>%\n  separate(`Sample Name`, c(\"Site ID\",\"subplot.layer.date\"), \"_\", remove = FALSE,) %>% \n  separate(`subplot.layer.date`, c(\"Subplot\", \"Layer\", \"Date\"), \"-\") \n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 1754 Columns: 19\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (8): Bin ID, Genome Name, Bin Quality, Bin Lineage, GTDB-Tk Taxonomy L...\ndbl  (10): IMG Genome ID, Bin Completeness, Bin Contamination, Total Number ...\ndate  (1): Date Added\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Expected 6 pieces. Additional pieces discarded in 29 rows [54, 232, 267, 328,\n389, 400, 439, 473, 529, 531, 538, 669, 936, 1016, 1118, 1240, 1323, 1330,\n1477, 1484, ...].\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Expected 6 pieces. Missing pieces filled with `NA` in 429 rows [46, 50, 53, 55,\n56, 57, 61, 62, 65, 66, 67, 71, 76, 78, 79, 81, 89, 92, 96, 99, ...].\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Expected 2 pieces. Missing pieces filled with `NA` in 624 rows [4, 7, 8, 236,\n237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252,\n...].\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nNEON_MAGs_bact_ind <- NEON_MAGs %>% \n  filter(Domain == \"Bacteria\") %>% \n  filter(`Assembly Type` == \"Individual\") \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nNEON_MAGs_bact_ind %>% \n  ggplot(aes(x = Phylum)) +\n  geom_bar() +\n  coord_flip()\n```\n\n::: {.cell-output-display}\n![](about_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n## WREF Site\n\n## Acidobacteriota\n\n# Discussion\n\n# Conclusions\n\n\n\n",
    "supporting": [
      "about_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}